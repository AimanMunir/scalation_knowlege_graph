[0m[[0m[31merror[0m] [0m[0m/Users/MacBot/scalation_knowlege_graph/scalation_database/src/main/scala/scalation/graph_db/Tree.scala:194:14: value x is not a member of Array[Double][0m
[0m[[0m[31merror[0m] [0m[0m    root.loc.x = MID[0m
[0m[[0m[31merror[0m] [0m[0m             ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/MacBot/scalation_knowlege_graph/scalation_database/src/main/scala/scalation/graph_db/Tree.scala:195:14: value y is not a member of Array[Double][0m
[0m[[0m[31merror[0m] [0m[0m    root.loc.y = TOP[0m
[0m[[0m[31merror[0m] [0m[0m             ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/MacBot/scalation_knowlege_graph/scalation_database/src/main/scala/scalation/graph_db/graph_algebra/MuGraphGen.scala:84:26: not found: value RandomVecI[0m
[0m[[0m[31merror[0m] [0m[0m            val rvec   = RandomVecI (degree, size-1, i)                // random vector of integers[0m
[0m[[0m[31merror[0m] [0m[0m                         ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/MacBot/scalation_knowlege_graph/scalation_database/src/main/scala/scalation/graph_db/graph_algebra/MuGraphGen.scala:132:56: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : Int[0m
[0m[[0m[31merror[0m] [0m[0m required: scala.collection.mutable.Set[Int][0m
[0m[[0m[31merror[0m] [0m[0m            for (j <- 0 until degree if ! (ch contains j)) ch(i) += j    // add the edge i -> j[0m
[0m[[0m[31merror[0m] [0m[0m                                                       ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/MacBot/scalation_knowlege_graph/scalation_database/src/main/scala/scalation/graph_db/graph_algebra/MuGraphGen.scala:162:56: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : Int[0m
[0m[[0m[31merror[0m] [0m[0m required: scala.collection.mutable.Set[Int][0m
[0m[[0m[31merror[0m] [0m[0m            for (j <- 0 until degree if ! (ch contains j)) ch(i) += j    // add the edge i -> j[0m
[0m[[0m[31merror[0m] [0m[0m                                                       ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/MacBot/scalation_knowlege_graph/scalation_database/src/main/scala/scalation/graph_db/graph_algebra/MuGraphGen.scala:186:54: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : Int[0m
[0m[[0m[31merror[0m] [0m[0m required: scala.collection.mutable.Set[Int][0m
[0m[[0m[31merror[0m] [0m[0m          for (j <- 0 until degree if ! (ch contains j)) ch(i) += j   // add the edge i -> j[0m
[0m[[0m[31merror[0m] [0m[0m                                                     ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/MacBot/scalation_knowlege_graph/scalation_database/src/main/scala/scalation/graph_db/graph_algebra/RandomGraph.scala:63:38: not found: value RandomVecS[0m
[0m[[0m[31merror[0m] [0m[0m    def genVLabels: Array [String] = RandomVecS (nLabels, true, stream).sgen[0m
[0m[[0m[31merror[0m] [0m[0m                                     ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/MacBot/scalation_knowlege_graph/scalation_database/src/main/scala/scalation/graph_db/graph_algebra/RandomGraph.scala:119:24: not found: value RandomVecS[0m
[0m[[0m[31merror[0m] [0m[0m        val var_labs = RandomVecS (nVertices, true, stream).sgen[0m
[0m[[0m[31merror[0m] [0m[0m                       ^[0m
[0m[[0m[31merror[0m] [0m[0m8 errors found[0m
